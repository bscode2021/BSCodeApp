@using BSCodeModels_Lib
@model Project
@{ 
    Layout = "_ActionLayout";
    ViewData["Header"] = "Proeject";
}

@using (Html.BeginForm("AddProject", "ProjectWebContent", FormMethod.Post))
{
    <div class="form-horizontal">

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Name)
                <br />
                <input type="text" name="Name" class="form-control" />
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Description)
                <br />
                <textarea name="Description" class="form-control" rows="5"></textarea>
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.Level)
                <br />
                <select id="Level" name="Level">
                  <option value="1">Easy</option>
                  <option value="2">intermedia</option>
                  <option value="3">Hard</option>
                  <option value="audi">Audi</option>
                </select>
                @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.TehnologyUsed)
                <br />

                <select class="select" multiple>
                  <option value="1">CSharp</option>
                  <option value="2">DotNet</option>
                  <option value="3">JavaScript</option>
                  <option value="4">HTML</option>
                  <option value="5">CSS</option>
                </select>

                <div class="select-custom-content">
                  <button class="btn-save btn btn-primary btn-sm">Save</button>
                </div>
                @Html.ValidationMessageFor(model => model.TehnologyUsed, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.ProjectURL)
                <br />
                <input type="text" name="ProjectURL" class="form-control" />
               
                @Html.ValidationMessageFor(model => model.ProjectURL, "", new { @class = "text-danger" })
            </div>
        </div>

          <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.ImageName)
                <br />
                <input type="file" name="ImageName" class="form-control" id="ImageName"/>
                 <button type="button" class="btn bg-success" id="saveImg" onclick="UploadImage()">Upload</button>
                @Html.ValidationMessageFor(model => model.ImageName, "", new { @class = "text-danger" })
            </div>
        </div>

          <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.TrainerID, new { @class = "form-label" })
                @Html.DropDownList("TrainerID", new SelectList(ViewBag.Trainers, "ID", "Name"), new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.TrainerID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-offset-3 col-md-3">
                <input type="submit" value="Send" class="btn btn-default btn-primary form-control"/>
            </div>
        </div>
    </div>

}

@section Scripts {
    <script type="text/javascript">

        function UploadImage(){
            
            var file = document.getElementById("ImageName").files[0];
             var reader = new FileReader();
             
             console.log(file.src));

             reader.readAsDataURL(file.src);

             console.log(reader.result);
           
        }
    </script>
}
